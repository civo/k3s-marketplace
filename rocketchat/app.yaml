apiVersion: v1
kind: Namespace
metadata:
  name: rocketchat
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rocket-mongodb
  namespace: rocketchat
  labels:
    app: mongodb
    chart: mongodb-7.14.8
    release: "rocket"
    heritage: "Helm"
secrets:
  - name: rocket-mongodb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: rocketchat
    helm.sh/chart: rocketchat-3.0.1
    app.kubernetes.io/instance: rocket
    app.kubernetes.io/managed-by: Helm
  name: rocket-rocketchat
---
apiVersion: v1
kind: Secret
metadata:
  name: rocket-mongodb
  namespace: rocketchat
  labels:
    app: mongodb
    chart: mongodb-7.14.8
    release: "rocket"
    heritage: "Helm"
type: Opaque
data:
  mongodb-root-password: "MDFkQlprQXNrQQ=="
---
apiVersion: v1
kind: Secret
metadata:
  name: rocket-rocketchat
  labels:
    app.kubernetes.io/name: rocketchat
    helm.sh/chart: rocketchat-3.0.1
    app.kubernetes.io/instance: rocket
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mongo-uri: "mongodb://$MONGODB_ROOT_USERNAME:$MONGODB_ROOT_PASSWORD@localhost:27017/local"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app: mongodb
    chart: mongodb-7.14.8
    heritage: Helm
    release: rocket
  name: rocket-mongodb
  namespace: rocketchat
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: rocket-mongodb
  namespace: rocketchat
  labels:
    app: mongodb
    chart: mongodb-7.14.8
    release: "rocket"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
  selector:
    app: mongodb
    release: "rocket"
---
apiVersion: v1
kind: Service
metadata:
  name: rocket-rocketchat
  labels:
    app.kubernetes.io/name: rocketchat
    helm.sh/chart: rocketchat-3.0.1
    app.kubernetes.io/instance: rocket
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: rocketchat
    app.kubernetes.io/instance: rocket
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rocket-mongodb
  namespace: rocketchat
  labels:
    app: mongodb
    chart: mongodb-7.14.8
    release: "rocket"
    heritage: "Helm"
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongodb
      release: "rocket"
  template:
    metadata:
      labels:
        app: mongodb
        release: "rocket"
        chart: mongodb-7.14.8
    spec:
      serviceAccountName: rocket-mongodb
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: rocket-mongodb
          image: docker.io/bitnami/mongodb:4.2.8-debian-10-r7
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rocket-mongodb
                  key: mongodb-root-password
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /bitnami/mongodb
              subPath:
          resources:
            {}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: rocket-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rocket-rocketchat
  labels:
    app.kubernetes.io/name: rocketchat
    helm.sh/chart: rocketchat-3.0.1
    app.kubernetes.io/instance: rocket
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rocketchat
      app.kubernetes.io/instance: rocket
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rocketchat
        app.kubernetes.io/instance: rocket
      annotations:
        checksum/secret: 5201611d55b815554863417536b029ac07a06755ae1ad62b96c9455cdeec5f67
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
      containers:
      - name: rocketchat
        image: "docker.io/rocketchat/rocket.chat:3.11.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: DEPLOY_PLATFORM
          value: helm-chart
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: rocket-rocketchat
              key: mongo-uri
        - name: MONGO_OPLOG_URL
          valueFrom:
            secretKeyRef:
              name: rocket-rocketchat
              key: mongo-oplog-uri
        ports:
        - name: http
          containerPort: 3000
        livenessProbe:
          httpGet:
            path: /api/info
            port: http
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/info
            port: http
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          null
        volumeMounts:
        - name: rocket-data
          mountPath: /app/uploads
      volumes:
      - name: rocket-data
        emptyDir: {}
